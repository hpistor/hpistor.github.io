#+SETUPFILE: ./hugo_setup.org
#+HUGO_SECTION: book
#+TITLE: Insertion Sort
#+DATE: <2020-03-18 Wed>


>Input: *A sequence of n numbers {a_{1}, a_{2}, a_{3}, ... a_{n}}*


>Output: *a permutation of {a_{1}, a_{2}, a_{3}, ... a_{n}} such that a_{1}' < a_{2}' < a_{n}'*

* How it works
Basically the way most people sort a hand of playing cards. We start with an
empty left hand and the the card face down. We remove one card at a time and
insert it into the correct position of the hand. To find the right spot, we
compare it to the card already in the hand from right to left.

/Sorts in place/

#+BEGIN_SRC python :results output :exports both
def insertion_sort(arr):
    print("Unsorted arr: " + str(arr))
    for j in range(1, len(arr)):
        key = arr[j]
        i = j-1
        while i >= 0 and arr[i] > key:
            arr[i+1] = arr[i]
            i = i-1
        arr[i+1] = key
    print("Sorted arr: " + str(arr))

insertion_sort([5, 2, 4, 6, 1, 3])
#+END_SRC

#+RESULTS:
: Unsorted arr: [5, 2, 4, 6, 1, 3]
: Sorted arr: [1, 2, 3, 4, 5, 6]
